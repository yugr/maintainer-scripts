#!/usr/bin/perl

# Copyright 2019 Yury Gribov
# 
# Use of this source code is governed by MIT license that can be
# found in the LICENSE.txt file.
# 
# Shortly describe script here.

use strict;
use warnings;

use File::Basename;
use File::Find;
use Getopt::Long qw(:config posix_default bundling no_ignore_case);
use Data::Dumper;

my $verbose = 0;
my $help = 0;
my $flag;
my $param;
my @multi;

sub usage() {
  my $me = basename($0);
  print <<EOF;
Usage: $me [OPT]... ROOT...
Describe script here.

OPT can be one of
  --flag, -f         Describe flag here.
  --param=P, -p P    Describe scalar parameter here.
  --multi=P, -m P    Describe array parameter here
                     (can be specified more than once).
  --help, -h         Print this help and exit.
  --verbose, -v      Print diagnostic info
                     (can be specified more than once).

Examples:
  \$ $me -f ROOT
EOF
  exit(0);
}

sub usage_short() {
  my $me = basename($0);
  print STDERR <<EOF;
No inputs specified.
Usage: $me [OPT]... ROOT...
Run `$me -h' for more details.
EOF
  exit(1);
}

GetOptions(
  'help|h'       => \$help,
  'verbose|v+'   => \$verbose,
  'flag|f'       => \$flag,
  'param|p=s'    => \$param,
  'multi|m=s@'   => \@multi,
);

usage() if $help;
usage_short() if $#ARGV < 0;

my @roots = @ARGV;

sub find_files() {
  # TODO (use $File::Find::name, $File::Find::dir)
}

foreach my $root (@roots) {
  -d $root or die "$root is not a directory";
  find({ wanted => \&find_files, no_chdir => 1 }, $root);
}
