#!/bin/sh

# Copyright 2016-2020 Yury Gribov
# 
# Use of this source code is governed by MIT license that can be
# found in the LICENSE.txt file.

# Insert license headers to all files in codebase.

set -eu

ME=$(basename $0)
TMP=${TMPDIR:-/tmp}/$ME.$$

trap "rm -f $TMP*" EXIT

absolutize() {
  test -e "$1"
  (cd $(dirname "$1"); echo $PWD/$(basename "$1"))
}

usage() {
  cat <<EOF
Syntax: $ME [OPT]... [DIR]
Insert license to all source/script files in directory.

Options:
  --short            Do not insert full license, just refer to file.
  --license L, -l L  Path to license file.
  -h, --help         Print this help and exit.
EOF
  exit 1
}

has_shebang() {
  head -1 $1 | grep -q '^ *#!'
}

is_source() {
  echo $1 | grep -q '\.\(h\|hpp\|inc\|c\|cpp\|cc\|C\|cxx\)$' \
    || file $1 | grep -q source
}

is_script() {
  has_shebang $1 \
    || echo $1 | grep -q '\.\(sh\|bash\|ksh\|zsh\|pl\|py\|hs\)$' \
    || file $1 | grep -q script
}

is_haskell_script() {
  head -1 $1 | grep -q '^ *#![^ ]*ghci\>' \
    || echo $1 | grep -q '\.hs$'
}

ARGS=$(getopt -o 'hl:' --long 'short,license:,help' -n $ME -- "$@")
eval set -- "$ARGS"

SHORT=
LICENSE=

while true; do
  case "$1" in
    --short)
      SHORT=1
      shift
      ;;
    -h | --help)
      usage
      ;;
    -l | --license)
      LICENSE=$2
      shift 2
      ;;
    --)
      shift
      break
      ;;
    -*)
      error "unknown option: $1"
      ;;
    *)
      error 'internal error'
      ;;
  esac
done

if test $# -eq 1; then
  DIR=$1
elif test $# -eq 0; then
  DIR=.
else
  echo >&2 "Usage: $ME [OPT]... DIR"
  exit 1
fi

if ! test -d "$DIR"; then
  echo >&2 "$ME: $DIR is not a directory"
  exit 1
fi

if test -z "$LICENSE"; then
  LICENSE=$DIR/LICENSE.txt
fi

if ! test -f "$LICENSE"; then
  echo >&2 "$ME: can't open $LICENSE"
  exit 1
fi

LICENSE=$(absolutize $LICENSE)

cd "$DIR"

if test -z "$SHORT"; then
  cp $LICENSE $TMP.lic
else
  LIC_NAME=$(grep -m1 -i license $LICENSE)
  if test -z "$LIC_NAME"; then
    echo >&2 "Failed to extract license name from $LICENSE"
    exit 1
  fi

  sed '/Copyright (c)/q' $LICENSE > $TMP.lic
  cat >> $TMP.lic <<EOF

Use of this source code is governed by $LIC_NAME
that can be found in the $(basename $LICENSE) file.
EOF
fi

EULA_C=$TMP.eula.c
( echo '/*'; sed 's/^/ * /' $TMP.lic; echo ' */' ) > $EULA_C

EULA_SH=$TMP.shell
sed 's/^/# /' $TMP.lic > $EULA_SH

EULA_HS=$TMP.haskell
sed 's/^/-- /' $TMP.lic > $EULA_HS

for f in $(find -iname '.[a-z0-9]*' -prune -o -type f -a -print); do
  if is_script $f; then
    echo "Patching script $f"
    if is_haskell_script $f; then
      EULA=$EULA_HS
    else
      EULA=$EULA_SH
    fi
    if has_shebang $f; then
      head -n 1 $f > $TMP.shebang
      tail -n +2 $f > $TMP.body
      ( cat $TMP.shebang; echo; cat $EULA; cat $TMP.body ) > $f
    else
      cp $f $TMP
      ( cat $EULA; echo; cat $TMP ) > $f
    fi
  elif is_source $f; then
    echo "Patching source file $f"
    cp $f $TMP
    ( cat $EULA_C; echo; cat $TMP ) > $f
  else
    echo "Ignoring $f"
  fi
done

