#!/bin/sh

# Copyright 2023 Yury Gribov
# 
# Use of this source code is governed by MIT license that can be
# found in the LICENSE.txt file.

# Indexes LLVM source code with ctags, respecting the supermacro, build directory
# and avoiding irrelevant files.

set -eu

rm -f cscope.* ctags tags

if [ -d tools/clang ]; then
  # Legacy layout from ancient times
  LLVM_DIR=.
  CLANG_DIR=tools/clang
  ROOTS=.
elif [ -f llvm/CMakeLists.txt ]; then
  LLVM_DIR=llvm
  CLANG_DIR=clang
  ROOTS='llvm clang'
  if test -d mlir; then
    ROOTS="$ROOTS mlir"
  fi
else
  echo 'You must run me from LLVM root directory' >&2
  exit 1
fi

find $ROOTS \
  -path $LLVM_DIR/test -prune -o -path $CLANG_DIR/test -prune \
  -o -path $LLVM_DIR/unittests -prune -o -path $LLVM_DIR/bindings -prune \
  -o -path $LLVM_DIR/examples -prune -o -path $CLANG_DIR/examples -prune \
  -o -path mlir/examples -prune -o -path mlir/test -prune -o -path mlir/unittests -prune \
  -o \( -name \*.h -o -name \*.c -o -name \*.cpp \) -print > cscope.files

if test $# -ge 1; then
  BUILD=$1
else
  BUILD=$PWD/build
fi

if [ -f "$BUILD/CMakeCache.txt" ]; then
  find $BUILD -name \*.inc -print >> cscope.files
else
  echo >&2 "Unable to find build directory at $BUILD, index may be incomplete"
fi

if ctags --version | grep -q 'Universal Ctags'; then
  EXTRA=extras
else
  # Exuberant Ctags
  EXTRA=extra
fi

echo 'Building ctags database...'
ctags --c++-kinds=+p --fields=+iaS --$EXTRA=+q -a -I LLVM_EXTERNAL_VISIBILITY,LLVM_LIBRARY_VISIBILITY -L cscope.files

# TODO: merge contents of .def files
