#!/bin/sh

set -eu

print_help_and_exit() {
  cat <<EOF
Usage: $(basename $0) [OPT]... CMD ...
Apply Git command to all repositories in current directory.

Options:
  -h, --help    Print help and exit.
  -x            Enable shell tracing.
  -r, --recursive
                Search for Git repos recursively
                (rather than just in current directory).
  -k, --keep    Keep temp files.

Examples:
  $ $(basename $0) status
EOF
  exit 1
}

me=$(basename $0)

R=
KEEP=
while true; do
  case "$1" in
    -r | --recursive)
      R=1
      shift
      ;;
    -h | --help)
      print_help_and_exit
      ;;
    -x)
      set -x
      shift
      ;;
    -k | --keep)
      KEEP=1
      shift
      ;;
    --)
      shift
      break
      ;;
    -*)
      error "unknown option: $1"
      ;;
    *)
      break
      ;;
  esac
done

if [ $# -eq 0 ]; then
  print_help_and_exit
fi

if test -z "$R"; then
  REPOS=$(ls -1d */.git)
else
  REPOS=$(find -name .git -a -type d)
fi

TMP=$(mktemp -d --suffix=git-all.$$)
if test -z "$KEEP"; then
  trap "rm -rf $TMP" EXIT
else
  echo "Temp files will be stored in $TMP"
fi

JOBS=
for d in $REPOS; do
  d=$(readlink -f $d/..)
  (cd $d && git "$@" > $TMP/$(basename $d).log 2>&1) &
  JOBS="$JOBS $d,$!"
  sleep 0.1
done

BAD_REPOS=
for d_pid in $JOBS; do
  d=${d_pid%,*}
  pid=${d_pid#*,}
  echo "=== $me: running in $d..."
  if ! wait $pid; then
    BAD_REPOS="${BAD_REPOS} $d"
  fi
  cat $TMP/$(basename $d).log
done

if test -n "$BAD_REPOS"; then
  echo >&2 "=== $me: failed in following repositories:"
  echo $BAD_REPOS | tr ' ' '\n' | sed 's/^/  /'
  exit 1
fi
