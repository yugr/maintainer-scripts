#!/bin/sh

# Copyright 2015-2023 Yury Gribov
# 
# Use of this source code is governed by MIT license that can be
# found in the LICENSE.txt file.

# Indexes GCC source code with ctags, respecting the supermacro, build directory
# and avoiding irrelevant files.

set -eu

if [ ! -f gcc/gcc.h ]; then
  echo 'You must run me from GCC root directory' >&2
  exit 1
fi

rm -f cscope.* ctags tags

find gcc libiberty libcpp \
  -path gcc/testsuite -prune -o -path 'lib*' -prune -o -path gcc/testsuite/config -prune \
  -o \( -name \*.h -o -name \*.c \) -print > cscope.files

if test $# -ge 1; then
  BUILD=$1
else
  BUILD=$PWD/build
fi

if test -f "$BUILD/gcc/options.h"; then
  find $BUILD/gcc -name \*.h -o -name \*.c -print >> cscope.files
else
  echo >&2 "Unable to find build directory at $BUILD, index may be incomplete"
fi

echo 'Building ctags database...'
ctags --c++-kinds=+p --fields=+iaS --extras=+q -a -I GTY+,ATTRIBUTE_UNUSED -L cscope.files

# Now manually merge contents of .def files
TMP=mktemp
rm -f $TMP
trap "rm -f $TMP" EXIT INT TERM
for def in \
    'gcc/tree.def DEFTREECODE' \
    'gcc/gimple.def DEFGSCODE' \
    'gcc/rtl.def DEF_RTL_EXPR' \
    'gcc/builtins.def DEF[A-Z0-9_]*_BUILTIN' \
    'gcc/internal-fn.def DEF_INTERNAL[A-Z0-9_]*_FN'; do
  file=${def% *}
  macro=${def#* }
  cat $file | sed -ne "s!^\($macro *(\([^,]*\)\).*\$!\2	$file	/\1,/!p" >> $TMP
done

cat tags >> $TMP
LC_COLLATE=C sort $TMP > tags

#echo 'Building cscope database...'
if which cscope 2>/dev/null 2>&1; then
  cscope -Igcc -Iinclude -q -R -b -i cscope.files
fi
